- hosts: localhost
  become: yes
  become_method: sudo

  tasks:
  - name: enable forward to wsl2
    command: "/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe d:/Programs/bin/wslforward.ps1" 
    # - "d:\\Programs\\bin\\wslforward.ps1" 
    when: set_forward is defined and set_forward == '1'
    tags:
    - forward

  # print facts
  - name: print facts
    debug:
      # var: ansible_facts
      msg: 
      # - "{{ ansible_facts }}"
      - "{{ ansible_facts.system }}"
      - "{{ ansible_facts.kernel }}"
      - "{{ ansible_facts.distribution }}"
      - "{{ ansible_facts.distribution_major_version }}"
    tags:
      - debug

  # setup some config files
  - name: edit dnf.conf remove tsflags=nodocs
    ini_file: 
      path: /etc/dnf/dnf.conf 
      section: main
      option: tsflags
      state: absent
  - name: edit /etc/wsl.conf 
    ini_file: 
      path: /etc/wsl.conf 
      section: network
      option: generateHosts
      value: "false"
      
  # install packages
  - name: update all
    register: update_all
    dnf:
      state: latest
      name: "*"
    # when: update_all is defined and update_all == '1'
    tags:
      - update
  - name: update all result
    debug:
      msg:
      - "{{update_all}}"
    tags:
      - update
 
  - name: install ansible
    dnf:
      state: latest
      name:
      - ansible
      - ansible-collection-ansible-posix
  - name: install tools
    dnf:
      state: latest
      name:
      # - wslu
      - less
      - procps-ng
      - wget 
      - curl 
      - sudo 
      - ncurses 
      - dnf-plugins-core 
      - dnf-utils 
      - passwd 
      - findutils 
      - mkpasswd
  - name: install network tools
    dnf:
      state: latest
      name: 
      - iputils
      - traceroute
      - bind-utils
      - iproute
      - telnet
      - hostname
  - name: install container tools
    dnf:
      state: latest
      name:
      - podman
      - podman-plugins
      - buildah
      - skopeo
  - name: install man
    dnf:
      state: latest
      name: 
      - man-pages 
      - man-db 
      - man
  - name: install vim
    dnf:
      state: latest
      name:
      - vim-enhanced
      - vim-powerline
  - name: install shell enhancements
    dnf:
      state: latest
      name:
      - powerline
      - powerline-fonts
      - bash-completion
  - name: install git
    dnf:
      state: latest
      name:
      - git
  
  # edit podman configuration
  - name: edit container.conf so systemd is not needed
    ini_file: 
      path: /usr/share/containers/containers.conf
      section: engine
      option: "{{ item.option }}"
      value: "{{ item.value }}"
    with_items:
      - { option: cgroup_manager, value: '"cgroupsfs"' }
      - { option: events_logger, value: '"file"' } 
      # events_logger = "file"
    tags:
      - podman

  # check if podman runs smoothly, otherwise reinstall shadow-utils
  - name: check podman
    command: podman info
    register: podman_result
    changed_when: false
    tags:
      - podman

  # - name: podman result
  #   debug:
  #     msg:
  #     - "{{podman_result.rc}}"
  #     - "{{podman_result.stdout}}"
  #     - "{{podman_result.stderr}}"
  #   tags:
  #     - debug

  # reinstall shadow-utils
  - name: reinstall shadow-utils
    command: dnf reinstall shadow-utils -y
    args:
      warn: false
    when: podman_result.rc > 0
    tags:
      - podman
    
  # enable ping
  - name: set net.ipv4.ping_group_range="0 2000"
    ansible.posix.sysctl:
      name: net.ipv4.ping_group_range
      value: "0 2000"
      state: present
      # sysctl_file: yes
    tags:
      - kernel

  # get genie systemd 
  - name: download genie systemd
    get_url:
      url: https://github.com/arkane-systems/genie/releases/download/v1.42/genie-1.42-1.fc33.x86_64.rpm
      dest: /tmp/genie.rpm
      # checksum: ???
  - name: install genie
    dnf:
      state: latest
      name: /tmp/genie.rpm 
  
  # add user pieter
  - name: add user pieter
    user:
      name: pieter
      group: wheel
      uid: 1000
      password: $6$SRH0SsKMhQSSGUqi$6fwzQPHdUJScFZKnlRLqaPgXq4A5nTW7ajz0TTrcDwEBARBSnExhPSy5LtJK8n30oAVOHj9kil9ky2L/Mn7Ho/
    tags:
      - adduser
  
  # passwordless sudo
  - name: passwordless sudo
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    tags:
      - sudoers
